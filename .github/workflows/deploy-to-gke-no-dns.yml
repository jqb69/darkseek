#no deplpoy-to-gke-no-dns.yml
name: Deploy to GKE Without DNS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: .darkseek_env # Specify the .darkseek environment here
    steps:
    - name: Validate Workflow Syntax
      uses: frenck/action-yamllint@v1
      with:
       file: .github/workflows/deploy-to-gke-no-dns.yml
       
    - name: Checkout repository
      uses: actions/checkout@v3
      
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{secrets.GCP_SA_KEY}}
        
    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{secrets.GCP_PROJECT_ID}}

    - name: Check if all required secrets are set
      id: gcp_secrets_check
      run: |
        required_secrets=("GCP_SA_KEY" "GCP_PROJECT_ID" "GKE_CLUSTER_ZONE" "GKE_CLUSTER_NAME")
        for secret in "${required_secrets[@]}"; do
          if [[ -z "${!secret}" ]]; then
          echo "Error: $secret not set"
          exit 1
          fi
        done

        echo "All required secrets are set"
        echo "GCP_PROJECT_ID: $GCP_PROJECT_ID"
        echo "GKE_CLUSTER_ZONE is set to $GKE_CLUSTER_ZONE"
        echo "GKE_CLUSTER_NAME is set to $GKE_CLUSTER_NAME"
      env:
        GCP_SA_KEY: ${{secrets.GCP_SA_KEY}}
        GCP_PROJECT_ID: ${{secrets.GCP_PROJECT_ID}}
        GKE_CLUSTER_ZONE: ${{secrets.GKE_CLUSTER_ZONE}}
        GKE_CLUSTER_NAME: ${{secrets.GKE_CLUSTER_NAME}}

   
    
    - name: Install kubectl and gke-gcloud-auth-plugin
      run: |
        curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
        chmod +x ./kubectl
        sudo mv ./kubectl /usr/local/bin/kubectl
        # Install gke-gcloud-auth-plugin
        gcloud components install gke-gcloud-auth-plugin --quiet
        gke-gcloud-auth-plugin --version
       
    - name: Verify Service Account
      run: |
        if [ -z "$GOOGLE_GHA_CREDS_PATH" ]; then
          echo "Error: GOOGLE_GHA_CREDS_PATH is not set."
          exit 1
        fi
        
        if [ ! -f "$GOOGLE_GHA_CREDS_PATH" ]; then
           echo "Error: Credentials file not found at $GOOGLE_GHA_CREDS_PATH"
           exit 1
        fi
        SERVICE_ACCOUNT=$(jq -r '.client_email' < "$GOOGLE_GHA_CREDS_PATH")
        echo "Service Account: $SERVICE_ACCOUNT"
   
    - name: List all clusters
      id: list-clusters
      run: gcloud container clusters list --project="${{env.GCP_PROJECT_ID}}"
      env:
        GCP_PROJECT_ID: ${{secrets.GCP_PROJECT_ID}}    
        
    - name: Verify GKE cluster location
      run: |
        required_secrets=("GCP_PROJECT_ID" "GKE_CLUSTER_ZONE" "GKE_CLUSTER_NAME")
        for secret in "${required_secrets[@]}"; do
          if [[ -z "${!secret}" ]]; then
          echo "Error: $secret not set"
          exit 1
          fi
        done
        
        echo "GKE_CLUSTER_ZONE is set = $GKE_CLUSTER_ZONE"
        echo "Running as: $(gcloud auth list --filter=status:ACTIVE --format='value(account)')"
        echo "Project: $(gcloud config get-value project)"
        gcloud container clusters list --region="$GKE_CLUSTER_ZONE" --project="$GCP_PROJECT_ID"
        
      env:
        GCP_PROJECT_ID: ${{secrets.GCP_PROJECT_ID}}
        GKE_CLUSTER_ZONE: ${{secrets.GKE_CLUSTER_ZONE}}
        GKE_CLUSTER_NAME: ${{secrets.GKE_CLUSTER_NAME}}
      

    - name: Configure kubectl
      run: |    
        gcloud container clusters get-credentials "${{env.GKE_CLUSTER_NAME}}" --region="${{env.GKE_CLUSTER_ZONE}}" --project="${{env.GCP_PROJECT_ID}}"
      env:
        GCP_PROJECT_ID: ${{secrets.GCP_PROJECT_ID}}
        GKE_CLUSTER_ZONE: ${{secrets.GKE_CLUSTER_ZONE}}
        GKE_CLUSTER_NAME: ${{secrets.GKE_CLUSTER_NAME}}

    - name: Deploy to GKE
      run: |
        chmod +x ./k8s/deploy_k8s.sh
        ./k8s/deploy_k8s.sh
      env:
        GOOGLE_API_KEY: ${{secrets.GOOGLE_API_KEY}}
        GOOGLE_CSE_ID: ${{secrets.GOOGLE_CSE_ID}}
        HUGGINGFACEHUB_API_TOKEN: ${{secrets.HUGGINGFACEHUB_API_TOKEN}}
        DATABASE_URL: ${{secrets.DATABASE_URL}}
        REDIS_URL: ${{secrets.REDIS_URL}}
        MQTT_BROKER_HOST: ${{secrets.MQTT_BROKER_HOST}}
        MQTT_BROKER_PORT: ${{secrets.MQTT_BROKER_PORT}}
        MQTT_TLS: ${{secrets.MQTT_TLS}}
        MQTT_USERNAME: ${{secrets.MQTT_USERNAME}}
        MQTT_PASSWORD: ${{secrets.MQTT_PASSWORD}}
        POSTGRES_USER: ${{secrets.POSTGRES_USER}}
        POSTGRES_PASSWORD: ${{secrets.POSTGRES_PASSWORD}}
        POSTGRES_DB: $${secrets.POSTGRES_DB}}
        
        
        
