name: Deploy to GKE Without DNS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    - name: Validate GCP_SA_KEY
      run: |
        echo "${{ secrets.GCP_SA_KEY }}" > /home/runner/work/darkseek/darkseek/gcloud.json
        python -c "
            import json, sys, os
            
            json_file_path = '/home/runner/work/darkseek/darkseek/gcloud.json'
            
            if not os.path.exists(json_file_path):
                print(f'Error: JSON file not found at {json_file_path}')
                sys.exit(1)
            
            try:
                with open(json_file_path, 'r') as f:
                    data = json.load(f)
            except json.JSONDecodeError as e:
                print(f'Error: Invalid JSON format in GCP_SA_KEY: {e}') # Include the specific JSONDecodeError message
                sys.exit(1)
            
            required_keys = ['type', 'project_id', 'private_key_id', 'private_key', 'client_email', 'client_id', 'auth_uri', 'token_uri', 'auth_provider_x509_cert_url', 'client_x509_cert_url']
            missing_keys = []
            for key in required_keys:
                if key not in data:
                    missing_keys.append(key)
            
            if missing_keys:
                print(f'Error: Missing required keys in GCP_SA_KEY: {', '.join(missing_keys)}')
                sys.exit(1)
            
            print('GCP_SA_KEY validation successful!') # Add a success message for clarity
            "
    
    - name: Install kubectl
      run: |
        curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
        chmod +x ./kubectl
        sudo mv ./kubectl /usr/local/bin/kubectl

    - name: Configure kubectl
      run: |
          gcloud auth activate-service-account --key-file=/home/runner/work/darkseek/darkseek/gcloud.json
          gcloud container clusters get-credentials [CLUSTER_NAME] --zone [ZONE] --project ${{ secrets.GCP_PROJECT_ID }}
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}

    - name: Deploy to GKE
      run: |
        chmod +x ./k8s/deploy_k8s.sh
        ./k8s/deploy_k8s.sh
      env:
        GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
        GOOGLE_CSE_ID: ${{ secrets.GOOGLE_CSE_ID }}
        HUGGINGFACEHUB_API_TOKEN: ${{ secrets.HUGGINGFACEHUB_API_TOKEN }}
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        REDIS_URL: ${{ secrets.REDIS_URL }}
        MQTT_BROKER_HOST: ${{ secrets.MQTT_BROKER_HOST }}
        MQTT_BROKER_PORT: ${{ secrets.MQTT_BROKER_PORT }}
        MQTT_TLS: ${{ secrets.MQTT_TLS }}
        MQTT_USERNAME: ${{ secrets.MQTT_USERNAME }}
        MQTT_PASSWORD: ${{ secrets.MQTT_PASSWORD }}
