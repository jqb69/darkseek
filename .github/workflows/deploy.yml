name: Deploy Docker Images

on:
  push:
    branches:
      - main  # Change this to the branch you want to trigger the deployment from

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image (Backend - WS)
      uses: docker/build-push-action@v3
      with:
        context: .
        file: ./app/backend/Dockerfile.ws  # Adjust the Dockerfile path accordingly
        push: true
        tags: jqb69/darkseek-backend-ws:latest  # Change this to your Docker Hub repository and tag

    - name: Build and push Docker image (Backend - MQTT)
      uses: docker/build-push-action@v3
      with:
        context: .
        file: ./app/backend/Dockerfile.mqtt  # Adjust the Dockerfile path accordingly
        push: true
        tags: jqb69/darkseek-backend-mqtt:latest  # Change this to your Docker Hub repository and tag

    - name: Build and push Docker image (Frontend)
      uses: docker/build-push-action@v3
      with:
        context: .
        file: ./app/frontend/Dockerfile  # Adjust the Dockerfile path accordingly
        push: true
        tags: jqb69/darkseek-frontend:latest  # Change this to your Docker Hub repository and tag

    - name: Deploy with Docker Compose
      run: |
        docker-compose -f docker-compose.yaml up -d
      env:
        GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
        GOOGLE_CSE_ID: ${{ secrets.GOOGLE_CSE_ID }}
        HUGGINGFACEHUB_API_TOKEN: ${{ secrets.HUGGINGFACEHUB_API_TOKEN }}
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        REDIS_URL: ${{ secrets.REDIS_URL }}
        MQTT_BROKER_HOST: ${{ secrets.MQTT_BROKER_HOST }}
        MQTT_BROKER_PORT: ${{ secrets.MQTT_BROKER_PORT }}
        MQTT_TLS: ${{ secrets.MQTT_TLS }}
        MQTT_USERNAME: ${{ secrets.MQTT_USERNAME }}
        MQTT_PASSWORD: ${{ secrets.MQTT_PASSWORD }}
