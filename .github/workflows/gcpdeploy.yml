name: Deploy to GCP

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Install kubectl
      run: |
        curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
        chmod +x ./kubectl
        sudo mv ./kubectl /usr/local/bin/kubectl

    - name: Configure kubectl
      run: |
        gcloud auth activate-service-account --key-file=${{ github.workspace }}/gcloud.json
        gcloud container clusters get-credentials ${{ secrets.GKE_CLUSTER_NAME }} --zone ${{ secrets.GKE_CLUSTER_ZONE }} --project ${{ secrets.GCP_PROJECT_ID }}
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}

    - name: Generate Secret Manifest
      run: |
        cat <<EOF > ./k8s/secret.yaml
        apiVersion: v1
        kind: Secret
        metadata:
          name: darkseek-secrets
        type: Opaque
        data:
          GOOGLE_API_KEY: $(echo -n "${{ secrets.GOOGLE_API_KEY }}" | base64)
          GOOGLE_CSE_ID: $(echo -n "${{ secrets.GOOGLE_CSE_ID }}" | base64)
          HUGGINGFACEHUB_API_TOKEN: $(echo -n "${{ secrets.HUGGINGFACEHUB_API_TOKEN }}" | base64)
          POSTGRES_USER: dXNlcg==
          POSTGRES_PASSWORD: cGFzc3dvcmQ=
          POSTGRES_DB: ZGFya3NlZWtkYg==
        EOF

    - name: Deploy to GKE
      run: |
        kubectl apply -f ./k8s/
        # Wait for services to get external IPs
        sleep 30
        WS_IP=$(kubectl get service darkseek-backend-ws -o jsonpath='{.status.loadBalancer.ingress[0].ip}' || echo "pending")
        MQTT_IP=$(kubectl get service darkseek-backend-mqtt -o jsonpath='{.status.loadBalancer.ingress[0].ip}' || echo "pending")
        if [ "$WS_IP" != "pending" ] && [ "$MQTT_IP" != "pending" ]; then
          kubectl patch configmap darkseek-config -p "{\"data\":{\"WEBSOCKET_URI\":\"ws://$WS_IP:8000/ws/\",\"MQTT_URI\":\"http://$MQTT_IP:8001\"}}"
        else
          echo "Warning: External IPs not yet assigned. ConfigMap not updated."
        fi
      env:
        # Non-sensitive vars only
        MQTT_BROKER_HOST: ${{ secrets.MQTT_BROKER_HOST }}
        MQTT_BROKER_PORT: ${{ secrets.MQTT_BROKER_PORT }}
        MQTT_TLS: ${{ secrets.MQTT_TLS }}

    - name: Verify Deployment
      run: |
        kubectl get pods
        kubectl get services
